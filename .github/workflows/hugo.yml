name: Build Hugo site and upload to release

on:
  push:
    branches:
      - develop

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.115.4
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb
      - name: Install Dart Sass
        run: sudo snap install dart-sass
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Add Mainroad Theme
        run: git submodule update --remote themes/mainroad
      - name: Install Node.js dependencies
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"
      - name: Build with Hugo
        env:
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          hugo --gc --minify

      - name: Archive Hugo Build Output
        run: |
          zip -r hugo-site.zip public/

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "release-${{ github.sha }}-${{ github.run_id }}"
          release_name: "Hugo Site Release ${GITHUB_SHA}"
          draft: false
          prerelease: false

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./hugo-site.zip
          asset_name: hugo-site.zip
          asset_content_type: application/zip

  deploy:
    runs-on: self-hosted
    needs: build
    steps:
      # 既存のpublicディレクトリを削除
      - name: Remove Existing Public Directory
        run: |
          pwd  # 現在のディレクトリを表示
          rm -rf ../public
      # GitHub APIからリリースアセットのダウンロードURLを取得
      - name: Download the Release Asset
        run: |
          pwd  # 現在のディレクトリを表示
          url=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/latest | grep "browser_download_url.*hugo-site.zip" | cut -d '"' -f 4)
          curl -L -o hugo-site.zip "$url"
      # ダウンロードしたZIPを解凍し、../publicとして設置
      - name: Unzip the Hugo Site
        run: |
          pwd  # 現在のディレクトリを表示
          unzip hugo-site.zip -d ../

      - name: Cleanup
        run: |
          pwd  # 現在のディレクトリを表示
          rm hugo-site.zip

